class Solution {
public:
    int findTargetSumWays(vector<int>& v, int k) {
        if(k<0) k=abs(k); //for negative integers too
        int n=v.size();
        long long sum=0;
        for(int i=0;i<n;i++)
            sum+=v[i];
        if((sum+k) %2==1  || k>sum){
             return 0;
        }   
        long long s=(sum+k)/2;
        int dp[n+1][s+1];
        for(int i=0;i<n+1;i++){
            for(int j=0;j<s+1;j++){
                if(i==0)
                    dp[i][j]=0;
                if(j==0)
                    dp[i][j]=1;
            }
        }
        for(int i=1;i<n+1;i++){
            for(int j=0;j<s+1;j++){ //start j=0 as 0 is also included in given 'v'.
                if(v[i-1]<=j)
                    dp[i][j]=dp[i-1][j] + dp[i-1][j-v[i-1]];
                else
                    dp[i][j]=dp[i-1][j];
            }
        }
        return dp[n][s];
        
    }
};
